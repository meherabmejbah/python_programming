# simple HTTP Server тАФ ржпрзЗржЯрж╛ ржмрзНрж░рж╛ржЙржЬрж╛рж░ ржерзЗржХрзЗ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржирж┐рж▓рзЗ рж░рж┐ржкрзНрж▓рж╛ржЗ ржжрзЗрзЯ(HTML ржкрзЗржЬ ржкрж╛ржарж╛рзЯ)

# socket рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐ ржерзЗржХрзЗ рж╕ржмржХрж┐ржЫрзБ ржЗржоржкрзЛрж░рзНржЯ ржХрж░рж┐
from socket import *

# рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ рж╣рзЛрж╕рзНржЯ ржУ ржкрзЛрж░рзНржЯ ржирж╛ржорзНржмрж╛рж░ ржирж┐рж░рзНржзрж╛рж░ржг ржХрж░рж┐
host = "localhost"     # ржирж┐ржЬрзЗрж░ ржХржорзНржкрж┐ржЙржЯрж╛рж░ржХрзЗржЗ ржирж┐рж░рзНржжрзЗрж╢ ржХрж░ржЫрзЗ
port = 8888            # ржЖржорж░рж╛ рзорзорзорзо ржирж╛ржорзНржмрж╛рж░ ржкрзЛрж░рзНржЯрзЗ ржХрж╛ржи ржХрж░ржмрзЛ

try:
    # ржПржХржЯрж┐ TCP/IP ржЯрж╛ржЗржкрзЗрж░ socket рждрзИрж░рж┐ ржХрж░рж┐
    server_socket = socket(AF_INET, SOCK_STREAM)

    # socket-ржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ IP ржПржмржВ port-ржП bind ржХрж░рж┐
    server_socket.bind((host, port))

    # рж╕рж╛рж░рзНржнрж╛рж░ socket-ржХрзЗ ржмрж▓рж┐ рж╕рж░рзНржмрзЛржЪрзНржЪ рзлржЯрж┐ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рждрзЗ
    server_socket.listen(5)

    # ржПржЦржи рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж▓рждрзЗ ржерж╛ржХржмрзЗ ржПржмржВ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржЧрзНрж░рж╣ржг ржХрж░ржмрзЗ
    while True:
        print("ЁЯФК Server is ready to receive request!")

        # ржХрзЛржирзЛ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржХрж╛ржирзЗржХрзНржЯ ржХрж░рж▓рзЗ рждрж╛ржХрзЗ ржЕрзНржпрж╛ржХрж╕рзЗржкрзНржЯ ржХрж░рж┐
        client_socket, address = server_socket.accept()
        print(f"ЁЯУб Client Address: {address}")

        # ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржерзЗржХрзЗ ржЖрж╕рж╛ ржбрзЗржЯрж╛ ржкрзЬрж┐
        request_data = client_socket.recv(1024)
        request_data = request_data.decode()
        print("\nЁЯУи Request Data:")
        print(request_data)

        # ржЖржорж░рж╛ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ ржПржХржЯрж┐ HTTP рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛ржарж╛ржмрзЛ
        response_data = "HTTP/1.1 200 OK\n\r"
        response_data += "Content-Type: text/html; charset=utf-8\r\n\r\n"
        response_data += "<html><body><h1>Hello, World! I am Meherab Mejbah</h1></body></html>\r\n\r\n"

        # рж░рзЗрж╕ржкржирзНрж╕ржЯрж┐ржХрзЗ encode ржХрж░рзЗ ржкрж╛ржарж╛рждрзЗ рж╣ржмрзЗ (bytes рж╣рж┐рж╕рзЗржмрзЗ)
        response_data = response_data.encode()

        # ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛ржарж╛ржЗ
        client_socket.sendall(response_data)

        # рждрж╛рж░ржкрж░ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ рж╕рж╛ржерзЗ ржХрж╛ржирзЗржХрж╢ржи ржмржирзНржз ржХрж░рзЗ ржжрзЗржЗ
        client_socket.shutdown(SHUT_RDWR)

except Exception as e:
    # ржпржжрж┐ ржХрзЛржирзЛ ржПрж░рж░ рж╣рзЯ, рждрж╛рж╣рж▓рзЗ рждрж╛ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж┐
    print(e)





# simple multithreaded TCP Server (ржЯрзЗржХрзНрж╕ржЯ рж░рзЗрж╕ржкржирзНрж╕)
import socket           # рж╕рзЛржХрзЗржЯ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐
import threading        # ржерзНрж░рзЗржбрж┐ржВ рж▓рж╛ржЗржмрзНрж░рзЗрж░рж┐
import socketserver     # socketserver тАФ рж╕рж╛рж░рзНржнрж╛рж░ ржмрж╛ржирж╛ржирзЛрж░ ржЬржирзНржп Python ржПрж░ рждрзИрж░рж┐ ржоржбрж┐ржЙрж▓

# ржкрзНрж░ржержорзЗ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯрзЗрж░ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░рж╛рж░ ржЬржирзНржп рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░ ржХрзНрж▓рж╛рж╕ ржмрж╛ржирж╛ржЗ
class ThreadedTCPRequestHandler(socketserver.BaseRequestHandler):

    # ржПржЗ ржлрж╛ржВрж╢ржиржЯрж┐ рждржЦржиржЗ ржЪрж╛рж▓рзБ рж╣ржмрзЗ ржпржЦржи ржХрзЛржирзЛ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ ржкрж╛ржарж╛ржмрзЗ
    def handle(self):
        # ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржерзЗржХрзЗ ржЖрж╕рж╛ ржбрзЗржЯрж╛ ржкрзЬрж┐ (1024 ржмрж╛ржЗржЯ ржкрж░рзНржпржирзНржд)
        data = str(self.request.recv(1024), "ascii")

        # ржПржЦржиржХрж╛рж░ ржерзНрж░рзЗржбрзЗрж░ ржирж╛ржо ржирж┐рзЯрзЗ рж░рж╛ржЦрж┐ (ржпрзЗржоржи: Thread-1, Thread-2)
        cur_thread = threading.current_thread()

        # ржерзНрж░рзЗржбрзЗрж░ ржирж╛ржо рж╕рж╣ рж░рзЗрж╕ржкржирзНрж╕ ржмрж╛ржирж╛ржЗ
        response = bytes("{}: {}".format(cur_thread.name, data), "ascii")

        # ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛ржарж╛ржЗ
        self.request.sendall(response)

# ржПржЦржи ржЖржорж░рж╛ ржПржХрж╛ржзрж┐ржХ ржерзНрж░рзЗржб рж╕ржорж░рзНржержи ржХрж░рзЗ ржПржоржи рж╕рж╛рж░рзНржнрж╛рж░ ржмрж╛ржирж╛ржЗ
class ThreadedTCPServer(socketserver.ThreadingMixIn, socketserver.TCPServer):
    pass  # ржПржЦрж╛ржирзЗ ржХрж┐ржЫрзБ ржЖрж▓рж╛ржжрж╛ рж▓рж╛ржЧржЫрзЗ ржирж╛, рж╢рзБржзрзБ ржХрзНрж▓рж╛рж╕ ржбрзЗржлрж┐ржирзЗрж╢ржи

# ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржлрж╛ржВрж╢ржи: ржПржЯрж╛ рж╕рж╛рж░рзНржнрж╛рж░рзЗ ржХрж╛ржирзЗржХрзНржЯ рж╣рзЯрзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ
def client(ip, port, message):
    # ржПржХржЯрж╛ рж╕рж╛ржзрж╛рж░ржг TCP рж╕рзЛржХрзЗржЯ ржмрж╛ржирж╛ржЗ
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
        # рж╕рж╛рж░рзНржнрж╛рж░рзЗ ржХрж╛ржирзЗржХрзНржЯ ржХрж░рж┐
        sock.connect((ip, port))

        # ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржЗ
        sock.sendall(bytes(message, "ascii"))

        # рж╕рж╛рж░рзНржнрж╛рж░ ржерзЗржХрзЗ рж░рзЗрж╕ржкржирзНрж╕ ржкрж╛ржЗ
        response = str(sock.recv(1024), "ascii")

        # рж░рзЗрж╕ржкржирзНрж╕ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рж┐
        print("ЁЯУе Received: {}".format(response))

# ржорзЗржЗржи рж╕рзНржХрзНрж░рж┐ржкрзНржЯ ржЪрж╛рж▓рзБ рж╣ржмрж╛рж░ ржЕржВрж╢
if __name__ == "__main__":
    # 0 ржжрж┐рж▓рзЗ ржЕржЯрзЛ ржПржХржЯрж╛ржЗ ржЦрж╛рж▓рж┐ ржкрзЛрж░рзНржЯ ржирзЗрзЯ
    HOST, PORT = "localhost", 0

    # рж╕рж╛рж░рзНржнрж╛рж░ рждрзИрж░рж┐ ржХрж░рж┐ (рж╣рзЛрж╕рзНржЯ, ржкрзЛрж░рзНржЯ, рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░)
    server = ThreadedTCPServer((HOST, PORT), ThreadedTCPRequestHandler)

    # with ржмрзНрж▓ржХ тАФ рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рж╛ржирзЛрж░ ржЬржирзНржп ржирж┐рж░рж╛ржкржж ржЙржкрж╛рзЯ
    with server:
        # server.server_address ржерзЗржХрзЗ ржкрзНрж░ржХрзГржд IP ржПржмржВ port ржкрж╛ржЗ
        ip, port = server.server_address

        # ржирждрзБржи ржерзНрж░рзЗржбрзЗ рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ ржХрж░рж┐ ржпрж╛рждрзЗ ржПржХрж╛ржзрж┐ржХ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░рж╛ ржпрж╛рзЯ
        server_thread = threading.Thread(target=server.serve_forever)

        # ржорзЗржЗржи ржкрзНрж░рзЛржЧрзНрж░рж╛ржо ржмржирзНржз рж╣рж▓рзЗ ржпрзЗржи ржерзНрж░рзЗржбржУ ржмржирзНржз рж╣рзЯ
        server_thread.daemon = True
        server_thread.start()

        print("ЁЯз╡ Server loop running in thread:", server_thread.name)

        # ржПржЦржи ржПржХрзЗ ржПржХрзЗ рждрж┐ржиржЯрж┐ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ ржкрж╛ржарж╛ржЗ
        client(ip, port, "Hello World 1")
        client(ip, port, "Hello World 2")
        client(ip, port, "Hello World 3")

        # рж╕ржм рж╢рзЗрж╖ рж╣рж▓рзЗ рж╕рж╛рж░рзНржнрж╛рж░ ржмржирзНржз ржХрж░рж┐
        server.shutdown()
